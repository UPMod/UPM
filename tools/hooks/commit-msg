#!/bin/bash
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

escape="\033"
red="[41m"
green="[32m"
end_color="[0m"

# Minimum 10 characters in the commit
echo " "
echo -e "* Checking commit message..."
msg_commit=$(cat "$1")
size=${#msg_commit}
if [ $size -lt 10 ]; then
	echo "A commit must be annotated by message of at least ten characters";
	echo -e "${escape}${red}Aborting commit due to comment formatting errors${escape}${end_color}";
	exit 1
else
	echo -e "  ${escape}${green}OK${escape}${end_color}\n"
fi